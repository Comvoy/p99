# -*- makefile-gmake -*-

ifeq (${DEFINE__LP64__},1)
ATOMIC_TYPE := uint64_t
ATOMIC_SIZE := 8
DEFINE__GCC_HAVE_SYNC_COMPARE_AND_SWAP := ${DEFINE__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8}
else
ATOMIC_TYPE := uint32_t
ATOMIC_SIZE := 4
DEFINE__GCC_HAVE_SYNC_COMPARE_AND_SWAP := ${DEFINE__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4}
endif

CFLAGS += -DATOMIC_SIZE=${ATOMIC_SIZE}
CFLAGS += -DATOMIC_TYPE=${ATOMIC_TYPE}


# First test if this is perhaps a compiler that implements standard
# atomic operations as of C1x.
ifeq (${ATOMIC_OPS},)
ifeq (${shell test ${STDC_VERSION} -gt 201000 && echo YES},YES)
ifneq (${DEFINE__STDC_NO_THREAD__},1)
ATOMIC_OPS := 1
endif
endif
endif

# If this is not the case, test if the compiler implements the gcc
# extensions for atomic operations.
ifeq (${ATOMIC_OPS},)
ifneq (${DEFINE__GCC_HAVE_SYNC_COMPARE_AND_SWAP},1)
CFLAGS += -DGNUC_NO_SYNC
ifeq (${DEFINE__arm__},1)
DEFINE__GCC_HAVE_SYNC_COMPARE_AND_SWAP = 1
CFLAGS += -DGNUC_SYNC_REPLACE
endif
ifeq (${DEFINE__x86_64__},1)
DEFINE__GCC_HAVE_SYNC_COMPARE_AND_SWAP = 1
CFLAGS += -DGNUC_SYNC_REPLACE
endif
ifeq (${DEFINE__i386__},1)
DEFINE__GCC_HAVE_SYNC_COMPARE_AND_SWAP = 1
CFLAGS += -DGNUC_SYNC_REPLACE
endif
endif
endif

ifneq (${ATOMIC_OPS},)
CFLAGS += -DATOMIC_OPS=${ATOMIC_OPS}
endif
