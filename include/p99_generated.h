/* This file is automatically generated, do not change manually. */
#define P99__ARG(\
	_1,	_2,	_3,	_4,	_5,	_6,	_7,	_8,\
	_9,	_10,	_11,	_12,	_13,	_14,	_15,	_16,\
	_17,	_18,	_19,	_20,	_21,	_22,	_23,	_24,\
	_25,	_26,	_27,	_28,	_29,	_30,	_31,	_32,\
	_33,	_34,	_35,	_36,	_37,	_38,	_39,	_40,\
	_41,	_42,	_43,	_44,	_45,	_46,	_47,	_48,\
	_49,	_50,	_51,	_52,	_53,	_54,	_55,	_56,\
	_57,	_58,	_59,	_60,	_61,	_62,	_63,	_64,\
	...) _64
#define P99__NARG_1(...) P99__ARG(__VA_ARGS__, \
	63,	62,	61,	60,	59,	58,	57,	56,\
	55,	54,	53,	52,	51,	50,	49,	48,\
	47,	46,	45,	44,	43,	42,	41,	40,\
	39,	38,	37,	36,	35,	34,	33,	32,\
	31,	30,	29,	28,	27,	26,	25,	24,\
	23,	22,	21,	20,	19,	18,	17,	16,\
	15,	14,	13,	12,	11,	10,	9,	8,\
	7,	6,	5,	4,	3,	2,	1,	0,)
#define P99__NARG_2(...) P99__ARG(__VA_ARGS__, \
	P99__INV(2),	31,	P99__INV(2),	30,	P99__INV(2),	29,	P99__INV(2),	28,\
	P99__INV(2),	27,	P99__INV(2),	26,	P99__INV(2),	25,	P99__INV(2),	24,\
	P99__INV(2),	23,	P99__INV(2),	22,	P99__INV(2),	21,	P99__INV(2),	20,\
	P99__INV(2),	19,	P99__INV(2),	18,	P99__INV(2),	17,	P99__INV(2),	16,\
	P99__INV(2),	15,	P99__INV(2),	14,	P99__INV(2),	13,	P99__INV(2),	12,\
	P99__INV(2),	11,	P99__INV(2),	10,	P99__INV(2),	9,	P99__INV(2),	8,\
	P99__INV(2),	7,	P99__INV(2),	6,	P99__INV(2),	5,	P99__INV(2),	4,\
	P99__INV(2),	3,	P99__INV(2),	2,	P99__INV(2),	1,	P99__INV(2),	0,)
#define P99__NARG_3(...) P99__ARG(__VA_ARGS__, \
	21,	P99__INV(3),	P99__INV(3),	20,	P99__INV(3),	P99__INV(3),	19,	P99__INV(3),\
	P99__INV(3),	18,	P99__INV(3),	P99__INV(3),	17,	P99__INV(3),	P99__INV(3),	16,\
	P99__INV(3),	P99__INV(3),	15,	P99__INV(3),	P99__INV(3),	14,	P99__INV(3),	P99__INV(3),\
	13,	P99__INV(3),	P99__INV(3),	12,	P99__INV(3),	P99__INV(3),	11,	P99__INV(3),\
	P99__INV(3),	10,	P99__INV(3),	P99__INV(3),	9,	P99__INV(3),	P99__INV(3),	8,\
	P99__INV(3),	P99__INV(3),	7,	P99__INV(3),	P99__INV(3),	6,	P99__INV(3),	P99__INV(3),\
	5,	P99__INV(3),	P99__INV(3),	4,	P99__INV(3),	P99__INV(3),	3,	P99__INV(3),\
	P99__INV(3),	2,	P99__INV(3),	P99__INV(3),	1,	P99__INV(3),	P99__INV(3),	0,)
#define P99__NARG_4(...) P99__ARG(__VA_ARGS__, \
	P99__INV(4),	P99__INV(4),	P99__INV(4),	15,	P99__INV(4),	P99__INV(4),	P99__INV(4),	14,\
	P99__INV(4),	P99__INV(4),	P99__INV(4),	13,	P99__INV(4),	P99__INV(4),	P99__INV(4),	12,\
	P99__INV(4),	P99__INV(4),	P99__INV(4),	11,	P99__INV(4),	P99__INV(4),	P99__INV(4),	10,\
	P99__INV(4),	P99__INV(4),	P99__INV(4),	9,	P99__INV(4),	P99__INV(4),	P99__INV(4),	8,\
	P99__INV(4),	P99__INV(4),	P99__INV(4),	7,	P99__INV(4),	P99__INV(4),	P99__INV(4),	6,\
	P99__INV(4),	P99__INV(4),	P99__INV(4),	5,	P99__INV(4),	P99__INV(4),	P99__INV(4),	4,\
	P99__INV(4),	P99__INV(4),	P99__INV(4),	3,	P99__INV(4),	P99__INV(4),	P99__INV(4),	2,\
	P99__INV(4),	P99__INV(4),	P99__INV(4),	1,	P99__INV(4),	P99__INV(4),	P99__INV(4),	0,)
/*! @brief Determine of the argument list has a comma, i.e at least two arguments.*/
#define HAS_COMMA(...) P99__ARG(__VA_ARGS__,\
	1,	1,	1,	1,	1,	1,	1,\
	1,	1,	1,	1,	1,	1,	1,	1,\
	1,	1,	1,	1,	1,	1,	1,	1,\
	1,	1,	1,	1,	1,	1,	1,	1,\
	1,	1,	1,	1,	1,	1,	1,	1,\
	1,	1,	1,	1,	1,	1,	1,	1,\
	1,	1,	1,	1,	1,	1,	1,	1,\
	1,	1,	1,	1,	1,	1,	1,	0, ...)
#define P99__SKP2(_0, ...) P99__SKP1(__VA_ARGS__)
#define P99__SKP3(_0, ...) P99__SKP2(__VA_ARGS__)
#define P99__SKP4(_0, ...) P99__SKP3(__VA_ARGS__)
#define P99__SKP5(_0, ...) P99__SKP4(__VA_ARGS__)
#define P99__SKP6(_0, ...) P99__SKP5(__VA_ARGS__)
#define P99__SKP7(_0, ...) P99__SKP6(__VA_ARGS__)
#define P99__SKP8(_0, ...) P99__SKP7(__VA_ARGS__)
#define P99__SKP9(_0, ...) P99__SKP8(__VA_ARGS__)
#define P99__SKP10(_0, ...) P99__SKP9(__VA_ARGS__)
#define P99__SKP11(_0, ...) P99__SKP10(__VA_ARGS__)
#define P99__SKP12(_0, ...) P99__SKP11(__VA_ARGS__)
#define P99__SKP13(_0, ...) P99__SKP12(__VA_ARGS__)
#define P99__SKP14(_0, ...) P99__SKP13(__VA_ARGS__)
#define P99__SKP15(_0, ...) P99__SKP14(__VA_ARGS__)
#define P99__SKP16(_0, ...) P99__SKP15(__VA_ARGS__)
#define P99__SKP17(_0, ...) P99__SKP16(__VA_ARGS__)
#define P99__SKP18(_0, ...) P99__SKP17(__VA_ARGS__)
#define P99__SKP19(_0, ...) P99__SKP18(__VA_ARGS__)
#define P99__SKP20(_0, ...) P99__SKP19(__VA_ARGS__)
#define P99__SKP21(_0, ...) P99__SKP20(__VA_ARGS__)
#define P99__SKP22(_0, ...) P99__SKP21(__VA_ARGS__)
#define P99__SKP23(_0, ...) P99__SKP22(__VA_ARGS__)
#define P99__SKP24(_0, ...) P99__SKP23(__VA_ARGS__)
#define P99__SKP25(_0, ...) P99__SKP24(__VA_ARGS__)
#define P99__SKP26(_0, ...) P99__SKP25(__VA_ARGS__)
#define P99__SKP27(_0, ...) P99__SKP26(__VA_ARGS__)
#define P99__SKP28(_0, ...) P99__SKP27(__VA_ARGS__)
#define P99__SKP29(_0, ...) P99__SKP28(__VA_ARGS__)
#define P99__SKP30(_0, ...) P99__SKP29(__VA_ARGS__)
#define P99__SKP31(_0, ...) P99__SKP30(__VA_ARGS__)
#define P99__SKP32(_0, ...) P99__SKP31(__VA_ARGS__)
#define P99__SKP33(_0, ...) P99__SKP32(__VA_ARGS__)
#define P99__SKP34(_0, ...) P99__SKP33(__VA_ARGS__)
#define P99__SKP35(_0, ...) P99__SKP34(__VA_ARGS__)
#define P99__SKP36(_0, ...) P99__SKP35(__VA_ARGS__)
#define P99__SKP37(_0, ...) P99__SKP36(__VA_ARGS__)
#define P99__SKP38(_0, ...) P99__SKP37(__VA_ARGS__)
#define P99__SKP39(_0, ...) P99__SKP38(__VA_ARGS__)
#define P99__SKP40(_0, ...) P99__SKP39(__VA_ARGS__)
#define P99__SKP41(_0, ...) P99__SKP40(__VA_ARGS__)
#define P99__SKP42(_0, ...) P99__SKP41(__VA_ARGS__)
#define P99__SKP43(_0, ...) P99__SKP42(__VA_ARGS__)
#define P99__SKP44(_0, ...) P99__SKP43(__VA_ARGS__)
#define P99__SKP45(_0, ...) P99__SKP44(__VA_ARGS__)
#define P99__SKP46(_0, ...) P99__SKP45(__VA_ARGS__)
#define P99__SKP47(_0, ...) P99__SKP46(__VA_ARGS__)
#define P99__SKP48(_0, ...) P99__SKP47(__VA_ARGS__)
#define P99__SKP49(_0, ...) P99__SKP48(__VA_ARGS__)
#define P99__SKP50(_0, ...) P99__SKP49(__VA_ARGS__)
#define P99__SKP51(_0, ...) P99__SKP50(__VA_ARGS__)
#define P99__SKP52(_0, ...) P99__SKP51(__VA_ARGS__)
#define P99__SKP53(_0, ...) P99__SKP52(__VA_ARGS__)
#define P99__SKP54(_0, ...) P99__SKP53(__VA_ARGS__)
#define P99__SKP55(_0, ...) P99__SKP54(__VA_ARGS__)
#define P99__SKP56(_0, ...) P99__SKP55(__VA_ARGS__)
#define P99__SKP57(_0, ...) P99__SKP56(__VA_ARGS__)
#define P99__SKP58(_0, ...) P99__SKP57(__VA_ARGS__)
#define P99__SKP59(_0, ...) P99__SKP58(__VA_ARGS__)
#define P99__SKP60(_0, ...) P99__SKP59(__VA_ARGS__)
#define P99__SKP61(_0, ...) P99__SKP60(__VA_ARGS__)
#define P99__SKP62(_0, ...) P99__SKP61(__VA_ARGS__)
#define P99__SKP63(_0, ...) P99__SKP62(__VA_ARGS__)
#define P99__PRE2(_0, ...) _0, P99__PRE1(__VA_ARGS__)
#define P99__PRE3(_0, ...) _0, P99__PRE2(__VA_ARGS__)
#define P99__PRE4(_0, ...) _0, P99__PRE3(__VA_ARGS__)
#define P99__PRE5(_0, ...) _0, P99__PRE4(__VA_ARGS__)
#define P99__PRE6(_0, ...) _0, P99__PRE5(__VA_ARGS__)
#define P99__PRE7(_0, ...) _0, P99__PRE6(__VA_ARGS__)
#define P99__PRE8(_0, ...) _0, P99__PRE7(__VA_ARGS__)
#define P99__PRE9(_0, ...) _0, P99__PRE8(__VA_ARGS__)
#define P99__PRE10(_0, ...) _0, P99__PRE9(__VA_ARGS__)
#define P99__PRE11(_0, ...) _0, P99__PRE10(__VA_ARGS__)
#define P99__PRE12(_0, ...) _0, P99__PRE11(__VA_ARGS__)
#define P99__PRE13(_0, ...) _0, P99__PRE12(__VA_ARGS__)
#define P99__PRE14(_0, ...) _0, P99__PRE13(__VA_ARGS__)
#define P99__PRE15(_0, ...) _0, P99__PRE14(__VA_ARGS__)
#define P99__PRE16(_0, ...) _0, P99__PRE15(__VA_ARGS__)
#define P99__PRE17(_0, ...) _0, P99__PRE16(__VA_ARGS__)
#define P99__PRE18(_0, ...) _0, P99__PRE17(__VA_ARGS__)
#define P99__PRE19(_0, ...) _0, P99__PRE18(__VA_ARGS__)
#define P99__PRE20(_0, ...) _0, P99__PRE19(__VA_ARGS__)
#define P99__PRE21(_0, ...) _0, P99__PRE20(__VA_ARGS__)
#define P99__PRE22(_0, ...) _0, P99__PRE21(__VA_ARGS__)
#define P99__PRE23(_0, ...) _0, P99__PRE22(__VA_ARGS__)
#define P99__PRE24(_0, ...) _0, P99__PRE23(__VA_ARGS__)
#define P99__PRE25(_0, ...) _0, P99__PRE24(__VA_ARGS__)
#define P99__PRE26(_0, ...) _0, P99__PRE25(__VA_ARGS__)
#define P99__PRE27(_0, ...) _0, P99__PRE26(__VA_ARGS__)
#define P99__PRE28(_0, ...) _0, P99__PRE27(__VA_ARGS__)
#define P99__PRE29(_0, ...) _0, P99__PRE28(__VA_ARGS__)
#define P99__PRE30(_0, ...) _0, P99__PRE29(__VA_ARGS__)
#define P99__PRE31(_0, ...) _0, P99__PRE30(__VA_ARGS__)
#define P99__PRE32(_0, ...) _0, P99__PRE31(__VA_ARGS__)
#define P99__PRE33(_0, ...) _0, P99__PRE32(__VA_ARGS__)
#define P99__PRE34(_0, ...) _0, P99__PRE33(__VA_ARGS__)
#define P99__PRE35(_0, ...) _0, P99__PRE34(__VA_ARGS__)
#define P99__PRE36(_0, ...) _0, P99__PRE35(__VA_ARGS__)
#define P99__PRE37(_0, ...) _0, P99__PRE36(__VA_ARGS__)
#define P99__PRE38(_0, ...) _0, P99__PRE37(__VA_ARGS__)
#define P99__PRE39(_0, ...) _0, P99__PRE38(__VA_ARGS__)
#define P99__PRE40(_0, ...) _0, P99__PRE39(__VA_ARGS__)
#define P99__PRE41(_0, ...) _0, P99__PRE40(__VA_ARGS__)
#define P99__PRE42(_0, ...) _0, P99__PRE41(__VA_ARGS__)
#define P99__PRE43(_0, ...) _0, P99__PRE42(__VA_ARGS__)
#define P99__PRE44(_0, ...) _0, P99__PRE43(__VA_ARGS__)
#define P99__PRE45(_0, ...) _0, P99__PRE44(__VA_ARGS__)
#define P99__PRE46(_0, ...) _0, P99__PRE45(__VA_ARGS__)
#define P99__PRE47(_0, ...) _0, P99__PRE46(__VA_ARGS__)
#define P99__PRE48(_0, ...) _0, P99__PRE47(__VA_ARGS__)
#define P99__PRE49(_0, ...) _0, P99__PRE48(__VA_ARGS__)
#define P99__PRE50(_0, ...) _0, P99__PRE49(__VA_ARGS__)
#define P99__PRE51(_0, ...) _0, P99__PRE50(__VA_ARGS__)
#define P99__PRE52(_0, ...) _0, P99__PRE51(__VA_ARGS__)
#define P99__PRE53(_0, ...) _0, P99__PRE52(__VA_ARGS__)
#define P99__PRE54(_0, ...) _0, P99__PRE53(__VA_ARGS__)
#define P99__PRE55(_0, ...) _0, P99__PRE54(__VA_ARGS__)
#define P99__PRE56(_0, ...) _0, P99__PRE55(__VA_ARGS__)
#define P99__PRE57(_0, ...) _0, P99__PRE56(__VA_ARGS__)
#define P99__PRE58(_0, ...) _0, P99__PRE57(__VA_ARGS__)
#define P99__PRE59(_0, ...) _0, P99__PRE58(__VA_ARGS__)
#define P99__PRE60(_0, ...) _0, P99__PRE59(__VA_ARGS__)
#define P99__PRE61(_0, ...) _0, P99__PRE60(__VA_ARGS__)
#define P99__PRE62(_0, ...) _0, P99__PRE61(__VA_ARGS__)
#define P99__PRE63(_0, ...) _0, P99__PRE62(__VA_ARGS__)
#define P99__ASCENDING() \
	0,	1,	2,	3,	4,	5,	6,	7,\
	8,	9,	10,	11,	12,	13,	14,	15,\
	16,	17,	18,	19,	20,	21,	22,	23,\
	24,	25,	26,	27,	28,	29,	30,	31,\
	32,	33,	34,	35,	36,	37,	38,	39,\
	40,	41,	42,	43,	44,	45,	46,	47,\
	48,	49,	50,	51,	52,	53,	54,	55,\
	56,	57,	58,	59,	60,	61,	62,	63,
#define P99__ALL_ZEROES() \
	0,	0,	0,	0,	0,	0,	0,	0,\
	0,	0,	0,	0,	0,	0,	0,	0,\
	0,	0,	0,	0,	0,	0,	0,	0,\
	0,	0,	0,	0,	0,	0,	0,	0,\
	0,	0,	0,	0,	0,	0,	0,	0,\
	0,	0,	0,	0,	0,	0,	0,	0,\
	0,	0,	0,	0,	0,	0,	0,	0,\
	0,	0,	0,	0,	0,	0,	0,	0,
#define P99__ALL_ONES() \
	1,	1,	1,	1,	1,	1,	1,	1,\
	1,	1,	1,	1,	1,	1,	1,	1,\
	1,	1,	1,	1,	1,	1,	1,	1,\
	1,	1,	1,	1,	1,	1,	1,	1,\
	1,	1,	1,	1,	1,	1,	1,	1,\
	1,	1,	1,	1,	1,	1,	1,	1,\
	1,	1,	1,	1,	1,	1,	1,	1,\
	1,	1,	1,	1,	1,	1,	1,	1,
/*! @brief Paste 7 arguments at their boundary.*/
#define PASTE7(...) P99__PASTE7(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE7(L, ...) PASTE2(PASTE6(__VA_ARGS__), L)
/*! @brief Paste 8 arguments at their boundary.*/
#define PASTE8(...) P99__PASTE8(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE8(L, ...) PASTE2(PASTE7(__VA_ARGS__), L)
/*! @brief Paste 9 arguments at their boundary.*/
#define PASTE9(...) P99__PASTE9(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE9(L, ...) PASTE2(PASTE8(__VA_ARGS__), L)
/*! @brief Paste 10 arguments at their boundary.*/
#define PASTE10(...) P99__PASTE10(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE10(L, ...) PASTE2(PASTE9(__VA_ARGS__), L)
/*! @brief Paste 11 arguments at their boundary.*/
#define PASTE11(...) P99__PASTE11(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE11(L, ...) PASTE2(PASTE10(__VA_ARGS__), L)
/*! @brief Paste 12 arguments at their boundary.*/
#define PASTE12(...) P99__PASTE12(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE12(L, ...) PASTE2(PASTE11(__VA_ARGS__), L)
/*! @brief Paste 13 arguments at their boundary.*/
#define PASTE13(...) P99__PASTE13(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE13(L, ...) PASTE2(PASTE12(__VA_ARGS__), L)
/*! @brief Paste 14 arguments at their boundary.*/
#define PASTE14(...) P99__PASTE14(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE14(L, ...) PASTE2(PASTE13(__VA_ARGS__), L)
/*! @brief Paste 15 arguments at their boundary.*/
#define PASTE15(...) P99__PASTE15(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE15(L, ...) PASTE2(PASTE14(__VA_ARGS__), L)
/*! @brief Paste 16 arguments at their boundary.*/
#define PASTE16(...) P99__PASTE16(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE16(L, ...) PASTE2(PASTE15(__VA_ARGS__), L)
/*! @brief Paste 17 arguments at their boundary.*/
#define PASTE17(...) P99__PASTE17(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE17(L, ...) PASTE2(PASTE16(__VA_ARGS__), L)
/*! @brief Paste 18 arguments at their boundary.*/
#define PASTE18(...) P99__PASTE18(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE18(L, ...) PASTE2(PASTE17(__VA_ARGS__), L)
/*! @brief Paste 19 arguments at their boundary.*/
#define PASTE19(...) P99__PASTE19(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE19(L, ...) PASTE2(PASTE18(__VA_ARGS__), L)
/*! @brief Paste 20 arguments at their boundary.*/
#define PASTE20(...) P99__PASTE20(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE20(L, ...) PASTE2(PASTE19(__VA_ARGS__), L)
/*! @brief Paste 21 arguments at their boundary.*/
#define PASTE21(...) P99__PASTE21(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE21(L, ...) PASTE2(PASTE20(__VA_ARGS__), L)
/*! @brief Paste 22 arguments at their boundary.*/
#define PASTE22(...) P99__PASTE22(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE22(L, ...) PASTE2(PASTE21(__VA_ARGS__), L)
/*! @brief Paste 23 arguments at their boundary.*/
#define PASTE23(...) P99__PASTE23(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE23(L, ...) PASTE2(PASTE22(__VA_ARGS__), L)
/*! @brief Paste 24 arguments at their boundary.*/
#define PASTE24(...) P99__PASTE24(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE24(L, ...) PASTE2(PASTE23(__VA_ARGS__), L)
/*! @brief Paste 25 arguments at their boundary.*/
#define PASTE25(...) P99__PASTE25(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE25(L, ...) PASTE2(PASTE24(__VA_ARGS__), L)
/*! @brief Paste 26 arguments at their boundary.*/
#define PASTE26(...) P99__PASTE26(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE26(L, ...) PASTE2(PASTE25(__VA_ARGS__), L)
/*! @brief Paste 27 arguments at their boundary.*/
#define PASTE27(...) P99__PASTE27(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE27(L, ...) PASTE2(PASTE26(__VA_ARGS__), L)
/*! @brief Paste 28 arguments at their boundary.*/
#define PASTE28(...) P99__PASTE28(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE28(L, ...) PASTE2(PASTE27(__VA_ARGS__), L)
/*! @brief Paste 29 arguments at their boundary.*/
#define PASTE29(...) P99__PASTE29(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE29(L, ...) PASTE2(PASTE28(__VA_ARGS__), L)
/*! @brief Paste 30 arguments at their boundary.*/
#define PASTE30(...) P99__PASTE30(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE30(L, ...) PASTE2(PASTE29(__VA_ARGS__), L)
/*! @brief Paste 31 arguments at their boundary.*/
#define PASTE31(...) P99__PASTE31(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE31(L, ...) PASTE2(PASTE30(__VA_ARGS__), L)
/*! @brief Paste 32 arguments at their boundary.*/
#define PASTE32(...) P99__PASTE32(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE32(L, ...) PASTE2(PASTE31(__VA_ARGS__), L)
/*! @brief Paste 33 arguments at their boundary.*/
#define PASTE33(...) P99__PASTE33(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE33(L, ...) PASTE2(PASTE32(__VA_ARGS__), L)
/*! @brief Paste 34 arguments at their boundary.*/
#define PASTE34(...) P99__PASTE34(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE34(L, ...) PASTE2(PASTE33(__VA_ARGS__), L)
/*! @brief Paste 35 arguments at their boundary.*/
#define PASTE35(...) P99__PASTE35(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE35(L, ...) PASTE2(PASTE34(__VA_ARGS__), L)
/*! @brief Paste 36 arguments at their boundary.*/
#define PASTE36(...) P99__PASTE36(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE36(L, ...) PASTE2(PASTE35(__VA_ARGS__), L)
/*! @brief Paste 37 arguments at their boundary.*/
#define PASTE37(...) P99__PASTE37(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE37(L, ...) PASTE2(PASTE36(__VA_ARGS__), L)
/*! @brief Paste 38 arguments at their boundary.*/
#define PASTE38(...) P99__PASTE38(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE38(L, ...) PASTE2(PASTE37(__VA_ARGS__), L)
/*! @brief Paste 39 arguments at their boundary.*/
#define PASTE39(...) P99__PASTE39(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE39(L, ...) PASTE2(PASTE38(__VA_ARGS__), L)
/*! @brief Paste 40 arguments at their boundary.*/
#define PASTE40(...) P99__PASTE40(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE40(L, ...) PASTE2(PASTE39(__VA_ARGS__), L)
/*! @brief Paste 41 arguments at their boundary.*/
#define PASTE41(...) P99__PASTE41(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE41(L, ...) PASTE2(PASTE40(__VA_ARGS__), L)
/*! @brief Paste 42 arguments at their boundary.*/
#define PASTE42(...) P99__PASTE42(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE42(L, ...) PASTE2(PASTE41(__VA_ARGS__), L)
/*! @brief Paste 43 arguments at their boundary.*/
#define PASTE43(...) P99__PASTE43(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE43(L, ...) PASTE2(PASTE42(__VA_ARGS__), L)
/*! @brief Paste 44 arguments at their boundary.*/
#define PASTE44(...) P99__PASTE44(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE44(L, ...) PASTE2(PASTE43(__VA_ARGS__), L)
/*! @brief Paste 45 arguments at their boundary.*/
#define PASTE45(...) P99__PASTE45(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE45(L, ...) PASTE2(PASTE44(__VA_ARGS__), L)
/*! @brief Paste 46 arguments at their boundary.*/
#define PASTE46(...) P99__PASTE46(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE46(L, ...) PASTE2(PASTE45(__VA_ARGS__), L)
/*! @brief Paste 47 arguments at their boundary.*/
#define PASTE47(...) P99__PASTE47(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE47(L, ...) PASTE2(PASTE46(__VA_ARGS__), L)
/*! @brief Paste 48 arguments at their boundary.*/
#define PASTE48(...) P99__PASTE48(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE48(L, ...) PASTE2(PASTE47(__VA_ARGS__), L)
/*! @brief Paste 49 arguments at their boundary.*/
#define PASTE49(...) P99__PASTE49(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE49(L, ...) PASTE2(PASTE48(__VA_ARGS__), L)
/*! @brief Paste 50 arguments at their boundary.*/
#define PASTE50(...) P99__PASTE50(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE50(L, ...) PASTE2(PASTE49(__VA_ARGS__), L)
/*! @brief Paste 51 arguments at their boundary.*/
#define PASTE51(...) P99__PASTE51(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE51(L, ...) PASTE2(PASTE50(__VA_ARGS__), L)
/*! @brief Paste 52 arguments at their boundary.*/
#define PASTE52(...) P99__PASTE52(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE52(L, ...) PASTE2(PASTE51(__VA_ARGS__), L)
/*! @brief Paste 53 arguments at their boundary.*/
#define PASTE53(...) P99__PASTE53(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE53(L, ...) PASTE2(PASTE52(__VA_ARGS__), L)
/*! @brief Paste 54 arguments at their boundary.*/
#define PASTE54(...) P99__PASTE54(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE54(L, ...) PASTE2(PASTE53(__VA_ARGS__), L)
/*! @brief Paste 55 arguments at their boundary.*/
#define PASTE55(...) P99__PASTE55(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE55(L, ...) PASTE2(PASTE54(__VA_ARGS__), L)
/*! @brief Paste 56 arguments at their boundary.*/
#define PASTE56(...) P99__PASTE56(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE56(L, ...) PASTE2(PASTE55(__VA_ARGS__), L)
/*! @brief Paste 57 arguments at their boundary.*/
#define PASTE57(...) P99__PASTE57(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE57(L, ...) PASTE2(PASTE56(__VA_ARGS__), L)
/*! @brief Paste 58 arguments at their boundary.*/
#define PASTE58(...) P99__PASTE58(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE58(L, ...) PASTE2(PASTE57(__VA_ARGS__), L)
/*! @brief Paste 59 arguments at their boundary.*/
#define PASTE59(...) P99__PASTE59(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE59(L, ...) PASTE2(PASTE58(__VA_ARGS__), L)
/*! @brief Paste 60 arguments at their boundary.*/
#define PASTE60(...) P99__PASTE60(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE60(L, ...) PASTE2(PASTE59(__VA_ARGS__), L)
/*! @brief Paste 61 arguments at their boundary.*/
#define PASTE61(...) P99__PASTE61(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE61(L, ...) PASTE2(PASTE60(__VA_ARGS__), L)
/*! @brief Paste 62 arguments at their boundary.*/
#define PASTE62(...) P99__PASTE62(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE62(L, ...) PASTE2(PASTE61(__VA_ARGS__), L)
/*! @brief Paste 63 arguments at their boundary.*/
#define PASTE63(...) P99__PASTE63(LAST(__VA_ARGS__), ALLBUTLAST(__VA_ARGS__))
#define P99__PASTE63(L, ...) PASTE2(PASTE62(__VA_ARGS__), L)
#define P99__IS_0_EQ_0(...) ,
#define P99__IS_1_EQ_1(...) ,
#define P99__IS_2_EQ_2(...) ,
#define P99__IS_3_EQ_3(...) ,
#define P99__IS_4_EQ_4(...) ,
#define P99__IS_5_EQ_5(...) ,
#define P99__IS_6_EQ_6(...) ,
#define P99__IS_7_EQ_7(...) ,
#define P99__IS_8_EQ_8(...) ,
#define P99__IS_9_EQ_9(...) ,
#define P99__IS_10_EQ_10(...) ,
#define P99__IS_11_EQ_11(...) ,
#define P99__IS_12_EQ_12(...) ,
#define P99__IS_13_EQ_13(...) ,
#define P99__IS_14_EQ_14(...) ,
#define P99__IS_15_EQ_15(...) ,
#define P99__IS_16_EQ_16(...) ,
#define P99__IS_17_EQ_17(...) ,
#define P99__IS_18_EQ_18(...) ,
#define P99__IS_19_EQ_19(...) ,
#define P99__IS_20_EQ_20(...) ,
#define P99__IS_21_EQ_21(...) ,
#define P99__IS_22_EQ_22(...) ,
#define P99__IS_23_EQ_23(...) ,
#define P99__IS_24_EQ_24(...) ,
#define P99__IS_25_EQ_25(...) ,
#define P99__IS_26_EQ_26(...) ,
#define P99__IS_27_EQ_27(...) ,
#define P99__IS_28_EQ_28(...) ,
#define P99__IS_29_EQ_29(...) ,
#define P99__IS_30_EQ_30(...) ,
#define P99__IS_31_EQ_31(...) ,
#define P99__IS_32_EQ_32(...) ,
#define P99__IS_33_EQ_33(...) ,
#define P99__IS_34_EQ_34(...) ,
#define P99__IS_35_EQ_35(...) ,
#define P99__IS_36_EQ_36(...) ,
#define P99__IS_37_EQ_37(...) ,
#define P99__IS_38_EQ_38(...) ,
#define P99__IS_39_EQ_39(...) ,
#define P99__IS_40_EQ_40(...) ,
#define P99__IS_41_EQ_41(...) ,
#define P99__IS_42_EQ_42(...) ,
#define P99__IS_43_EQ_43(...) ,
#define P99__IS_44_EQ_44(...) ,
#define P99__IS_45_EQ_45(...) ,
#define P99__IS_46_EQ_46(...) ,
#define P99__IS_47_EQ_47(...) ,
#define P99__IS_48_EQ_48(...) ,
#define P99__IS_49_EQ_49(...) ,
#define P99__IS_50_EQ_50(...) ,
#define P99__IS_51_EQ_51(...) ,
#define P99__IS_52_EQ_52(...) ,
#define P99__IS_53_EQ_53(...) ,
#define P99__IS_54_EQ_54(...) ,
#define P99__IS_55_EQ_55(...) ,
#define P99__IS_56_EQ_56(...) ,
#define P99__IS_57_EQ_57(...) ,
#define P99__IS_58_EQ_58(...) ,
#define P99__IS_59_EQ_59(...) ,
#define P99__IS_60_EQ_60(...) ,
#define P99__IS_61_EQ_61(...) ,
#define P99__IS_62_EQ_62(...) ,
#define P99__IS_63_EQ_63(...) ,
#define P99__IS_64_EQ_64(...) ,
#define P99__IS__Bool_EQ__Bool(...) ,
#define P99__IS__Complex_EQ__Complex(...) ,
#define P99__IS__Imaginary_EQ__Imaginary(...) ,
#define P99__IS_auto_EQ_auto(...) ,
#define P99__IS_break_EQ_break(...) ,
#define P99__IS_case_EQ_case(...) ,
#define P99__IS_char_EQ_char(...) ,
#define P99__IS_const_EQ_const(...) ,
#define P99__IS_continue_EQ_continue(...) ,
#define P99__IS_default_EQ_default(...) ,
#define P99__IS_do_EQ_do(...) ,
#define P99__IS_double_EQ_double(...) ,
#define P99__IS_else_EQ_else(...) ,
#define P99__IS_enum_EQ_enum(...) ,
#define P99__IS_extern_EQ_extern(...) ,
#define P99__IS_float_EQ_float(...) ,
#define P99__IS_for_EQ_for(...) ,
#define P99__IS_goto_EQ_goto(...) ,
#define P99__IS_if_EQ_if(...) ,
#define P99__IS_inline_EQ_inline(...) ,
#define P99__IS_int_EQ_int(...) ,
#define P99__IS_long_EQ_long(...) ,
#define P99__IS_register_EQ_register(...) ,
#define P99__IS_restrict_EQ_restrict(...) ,
#define P99__IS_return_EQ_return(...) ,
#define P99__IS_short_EQ_short(...) ,
#define P99__IS_signed_EQ_signed(...) ,
#define P99__IS_sizeof_EQ_sizeof(...) ,
#define P99__IS_static_EQ_static(...) ,
#define P99__IS_struct_EQ_struct(...) ,
#define P99__IS_switch_EQ_switch(...) ,
#define P99__IS_typedef_EQ_typedef(...) ,
#define P99__IS_union_EQ_union(...) ,
#define P99__IS_unsigned_EQ_unsigned(...) ,
#define P99__IS_void_EQ_void(...) ,
#define P99__IS_volatile_EQ_volatile(...) ,
#define P99__IS_while_EQ_while(...) ,
/*! @brief Test if the argument consists of exactly the token @c 0 */
#define IS_EQ_0(...) P99_TOK_EQ(0, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 1 */
#define IS_EQ_1(...) P99_TOK_EQ(1, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 2 */
#define IS_EQ_2(...) P99_TOK_EQ(2, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 3 */
#define IS_EQ_3(...) P99_TOK_EQ(3, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 4 */
#define IS_EQ_4(...) P99_TOK_EQ(4, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 5 */
#define IS_EQ_5(...) P99_TOK_EQ(5, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 6 */
#define IS_EQ_6(...) P99_TOK_EQ(6, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 7 */
#define IS_EQ_7(...) P99_TOK_EQ(7, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 8 */
#define IS_EQ_8(...) P99_TOK_EQ(8, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 9 */
#define IS_EQ_9(...) P99_TOK_EQ(9, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 10 */
#define IS_EQ_10(...) P99_TOK_EQ(10, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 11 */
#define IS_EQ_11(...) P99_TOK_EQ(11, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 12 */
#define IS_EQ_12(...) P99_TOK_EQ(12, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 13 */
#define IS_EQ_13(...) P99_TOK_EQ(13, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 14 */
#define IS_EQ_14(...) P99_TOK_EQ(14, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 15 */
#define IS_EQ_15(...) P99_TOK_EQ(15, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 16 */
#define IS_EQ_16(...) P99_TOK_EQ(16, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 17 */
#define IS_EQ_17(...) P99_TOK_EQ(17, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 18 */
#define IS_EQ_18(...) P99_TOK_EQ(18, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 19 */
#define IS_EQ_19(...) P99_TOK_EQ(19, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 20 */
#define IS_EQ_20(...) P99_TOK_EQ(20, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 21 */
#define IS_EQ_21(...) P99_TOK_EQ(21, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 22 */
#define IS_EQ_22(...) P99_TOK_EQ(22, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 23 */
#define IS_EQ_23(...) P99_TOK_EQ(23, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 24 */
#define IS_EQ_24(...) P99_TOK_EQ(24, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 25 */
#define IS_EQ_25(...) P99_TOK_EQ(25, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 26 */
#define IS_EQ_26(...) P99_TOK_EQ(26, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 27 */
#define IS_EQ_27(...) P99_TOK_EQ(27, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 28 */
#define IS_EQ_28(...) P99_TOK_EQ(28, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 29 */
#define IS_EQ_29(...) P99_TOK_EQ(29, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 30 */
#define IS_EQ_30(...) P99_TOK_EQ(30, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 31 */
#define IS_EQ_31(...) P99_TOK_EQ(31, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 32 */
#define IS_EQ_32(...) P99_TOK_EQ(32, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 33 */
#define IS_EQ_33(...) P99_TOK_EQ(33, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 34 */
#define IS_EQ_34(...) P99_TOK_EQ(34, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 35 */
#define IS_EQ_35(...) P99_TOK_EQ(35, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 36 */
#define IS_EQ_36(...) P99_TOK_EQ(36, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 37 */
#define IS_EQ_37(...) P99_TOK_EQ(37, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 38 */
#define IS_EQ_38(...) P99_TOK_EQ(38, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 39 */
#define IS_EQ_39(...) P99_TOK_EQ(39, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 40 */
#define IS_EQ_40(...) P99_TOK_EQ(40, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 41 */
#define IS_EQ_41(...) P99_TOK_EQ(41, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 42 */
#define IS_EQ_42(...) P99_TOK_EQ(42, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 43 */
#define IS_EQ_43(...) P99_TOK_EQ(43, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 44 */
#define IS_EQ_44(...) P99_TOK_EQ(44, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 45 */
#define IS_EQ_45(...) P99_TOK_EQ(45, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 46 */
#define IS_EQ_46(...) P99_TOK_EQ(46, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 47 */
#define IS_EQ_47(...) P99_TOK_EQ(47, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 48 */
#define IS_EQ_48(...) P99_TOK_EQ(48, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 49 */
#define IS_EQ_49(...) P99_TOK_EQ(49, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 50 */
#define IS_EQ_50(...) P99_TOK_EQ(50, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 51 */
#define IS_EQ_51(...) P99_TOK_EQ(51, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 52 */
#define IS_EQ_52(...) P99_TOK_EQ(52, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 53 */
#define IS_EQ_53(...) P99_TOK_EQ(53, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 54 */
#define IS_EQ_54(...) P99_TOK_EQ(54, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 55 */
#define IS_EQ_55(...) P99_TOK_EQ(55, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 56 */
#define IS_EQ_56(...) P99_TOK_EQ(56, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 57 */
#define IS_EQ_57(...) P99_TOK_EQ(57, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 58 */
#define IS_EQ_58(...) P99_TOK_EQ(58, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 59 */
#define IS_EQ_59(...) P99_TOK_EQ(59, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 60 */
#define IS_EQ_60(...) P99_TOK_EQ(60, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 61 */
#define IS_EQ_61(...) P99_TOK_EQ(61, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 62 */
#define IS_EQ_62(...) P99_TOK_EQ(62, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 63 */
#define IS_EQ_63(...) P99_TOK_EQ(63, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c 64 */
#define IS_EQ_64(...) P99_TOK_EQ(64, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c _Bool */
#define IS_EQ__Bool(...) P99_TOK_EQ(_Bool, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c _Complex */
#define IS_EQ__Complex(...) P99_TOK_EQ(_Complex, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c _Imaginary */
#define IS_EQ__Imaginary(...) P99_TOK_EQ(_Imaginary, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c auto */
#define IS_EQ_auto(...) P99_TOK_EQ(auto, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c break */
#define IS_EQ_break(...) P99_TOK_EQ(break, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c case */
#define IS_EQ_case(...) P99_TOK_EQ(case, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c char */
#define IS_EQ_char(...) P99_TOK_EQ(char, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c const */
#define IS_EQ_const(...) P99_TOK_EQ(const, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c continue */
#define IS_EQ_continue(...) P99_TOK_EQ(continue, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c default */
#define IS_EQ_default(...) P99_TOK_EQ(default, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c do */
#define IS_EQ_do(...) P99_TOK_EQ(do, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c double */
#define IS_EQ_double(...) P99_TOK_EQ(double, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c else */
#define IS_EQ_else(...) P99_TOK_EQ(else, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c enum */
#define IS_EQ_enum(...) P99_TOK_EQ(enum, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c extern */
#define IS_EQ_extern(...) P99_TOK_EQ(extern, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c float */
#define IS_EQ_float(...) P99_TOK_EQ(float, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c for */
#define IS_EQ_for(...) P99_TOK_EQ(for, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c goto */
#define IS_EQ_goto(...) P99_TOK_EQ(goto, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c if */
#define IS_EQ_if(...) P99_TOK_EQ(if, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c inline */
#define IS_EQ_inline(...) P99_TOK_EQ(inline, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c int */
#define IS_EQ_int(...) P99_TOK_EQ(int, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c long */
#define IS_EQ_long(...) P99_TOK_EQ(long, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c register */
#define IS_EQ_register(...) P99_TOK_EQ(register, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c restrict */
#define IS_EQ_restrict(...) P99_TOK_EQ(restrict, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c return */
#define IS_EQ_return(...) P99_TOK_EQ(return, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c short */
#define IS_EQ_short(...) P99_TOK_EQ(short, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c signed */
#define IS_EQ_signed(...) P99_TOK_EQ(signed, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c sizeof */
#define IS_EQ_sizeof(...) P99_TOK_EQ(sizeof, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c static */
#define IS_EQ_static(...) P99_TOK_EQ(static, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c struct */
#define IS_EQ_struct(...) P99_TOK_EQ(struct, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c switch */
#define IS_EQ_switch(...) P99_TOK_EQ(switch, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c typedef */
#define IS_EQ_typedef(...) P99_TOK_EQ(typedef, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c union */
#define IS_EQ_union(...) P99_TOK_EQ(union, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c unsigned */
#define IS_EQ_unsigned(...) P99_TOK_EQ(unsigned, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c void */
#define IS_EQ_void(...) P99_TOK_EQ(void, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c volatile */
#define IS_EQ_volatile(...) P99_TOK_EQ(volatile, __VA_ARGS__)
/*! @brief Test if the argument consists of exactly the token @c while */
#define IS_EQ_while(...) P99_TOK_EQ(while, __VA_ARGS__)
#define P99__DEC_PRED_1 0
#define P99__DEC_PRED_2 1
#define P99__DEC_PRED_3 2
#define P99__DEC_PRED_4 3
#define P99__DEC_PRED_5 4
#define P99__DEC_PRED_6 5
#define P99__DEC_PRED_7 6
#define P99__DEC_PRED_8 7
#define P99__DEC_PRED_9 8
#define P99__DEC_PRED_10 9
#define P99__DEC_PRED_11 10
#define P99__DEC_PRED_12 11
#define P99__DEC_PRED_13 12
#define P99__DEC_PRED_14 13
#define P99__DEC_PRED_15 14
#define P99__DEC_PRED_16 15
#define P99__DEC_PRED_17 16
#define P99__DEC_PRED_18 17
#define P99__DEC_PRED_19 18
#define P99__DEC_PRED_20 19
#define P99__DEC_PRED_21 20
#define P99__DEC_PRED_22 21
#define P99__DEC_PRED_23 22
#define P99__DEC_PRED_24 23
#define P99__DEC_PRED_25 24
#define P99__DEC_PRED_26 25
#define P99__DEC_PRED_27 26
#define P99__DEC_PRED_28 27
#define P99__DEC_PRED_29 28
#define P99__DEC_PRED_30 29
#define P99__DEC_PRED_31 30
#define P99__DEC_PRED_32 31
#define P99__DEC_PRED_33 32
#define P99__DEC_PRED_34 33
#define P99__DEC_PRED_35 34
#define P99__DEC_PRED_36 35
#define P99__DEC_PRED_37 36
#define P99__DEC_PRED_38 37
#define P99__DEC_PRED_39 38
#define P99__DEC_PRED_40 39
#define P99__DEC_PRED_41 40
#define P99__DEC_PRED_42 41
#define P99__DEC_PRED_43 42
#define P99__DEC_PRED_44 43
#define P99__DEC_PRED_45 44
#define P99__DEC_PRED_46 45
#define P99__DEC_PRED_47 46
#define P99__DEC_PRED_48 47
#define P99__DEC_PRED_49 48
#define P99__DEC_PRED_50 49
#define P99__DEC_PRED_51 50
#define P99__DEC_PRED_52 51
#define P99__DEC_PRED_53 52
#define P99__DEC_PRED_54 53
#define P99__DEC_PRED_55 54
#define P99__DEC_PRED_56 55
#define P99__DEC_PRED_57 56
#define P99__DEC_PRED_58 57
#define P99__DEC_PRED_59 58
#define P99__DEC_PRED_60 59
#define P99__DEC_PRED_61 60
#define P99__DEC_PRED_62 61
#define P99__DEC_PRED_63 62
#define P99__DEC_PRED_64 63
#define P99__DEC_PRED_65 64
#define P99__DEC_PRED_minus_0 minus_1
#define P99__DEC_PRED_minus_1 minus_2
#define P99__DEC_PRED_minus_2 minus_3
#define P99__DEC_PRED_minus_3 minus_4
#define P99__DEC_PRED_minus_4 minus_5
#define P99__DEC_PRED_minus_5 minus_6
#define P99__DEC_PRED_minus_6 minus_7
#define P99__DEC_PRED_minus_7 minus_8
#define P99__DEC_PRED_minus_8 minus_9
#define P99__DEC_PRED_minus_9 minus_10
#define P99__DEC_PRED_minus_10 minus_11
#define P99__DEC_PRED_minus_11 minus_12
#define P99__DEC_PRED_minus_12 minus_13
#define P99__DEC_PRED_minus_13 minus_14
#define P99__DEC_PRED_minus_14 minus_15
#define P99__DEC_PRED_minus_15 minus_16
#define P99__DEC_PRED_minus_16 minus_17
#define P99__DEC_PRED_minus_17 minus_18
#define P99__DEC_PRED_minus_18 minus_19
#define P99__DEC_PRED_minus_19 minus_20
#define P99__DEC_PRED_minus_20 minus_21
#define P99__DEC_PRED_minus_21 minus_22
#define P99__DEC_PRED_minus_22 minus_23
#define P99__DEC_PRED_minus_23 minus_24
#define P99__DEC_PRED_minus_24 minus_25
#define P99__DEC_PRED_minus_25 minus_26
#define P99__DEC_PRED_minus_26 minus_27
#define P99__DEC_PRED_minus_27 minus_28
#define P99__DEC_PRED_minus_28 minus_29
#define P99__DEC_PRED_minus_29 minus_30
#define P99__DEC_PRED_minus_30 minus_31
#define P99__DEC_PRED_minus_31 minus_32
#define P99__DEC_PRED_minus_32 minus_33
#define P99__DEC_PRED_minus_33 minus_34
#define P99__DEC_PRED_minus_34 minus_35
#define P99__DEC_PRED_minus_35 minus_36
#define P99__DEC_PRED_minus_36 minus_37
#define P99__DEC_PRED_minus_37 minus_38
#define P99__DEC_PRED_minus_38 minus_39
#define P99__DEC_PRED_minus_39 minus_40
#define P99__DEC_PRED_minus_40 minus_41
#define P99__DEC_PRED_minus_41 minus_42
#define P99__DEC_PRED_minus_42 minus_43
#define P99__DEC_PRED_minus_43 minus_44
#define P99__DEC_PRED_minus_44 minus_45
#define P99__DEC_PRED_minus_45 minus_46
#define P99__DEC_PRED_minus_46 minus_47
#define P99__DEC_PRED_minus_47 minus_48
#define P99__DEC_PRED_minus_48 minus_49
#define P99__DEC_PRED_minus_49 minus_50
#define P99__DEC_PRED_minus_50 minus_51
#define P99__DEC_PRED_minus_51 minus_52
#define P99__DEC_PRED_minus_52 minus_53
#define P99__DEC_PRED_minus_53 minus_54
#define P99__DEC_PRED_minus_54 minus_55
#define P99__DEC_PRED_minus_55 minus_56
#define P99__DEC_PRED_minus_56 minus_57
#define P99__DEC_PRED_minus_57 minus_58
#define P99__DEC_PRED_minus_58 minus_59
#define P99__DEC_PRED_minus_59 minus_60
#define P99__DEC_PRED_minus_60 minus_61
#define P99__DEC_PRED_minus_61 minus_62
#define P99__DEC_PRED_minus_62 minus_63
#define P99__DEC_PRED_minus_63 minus_64
#define P99__DEC_PRED_minus_64 minus_65
#define P99__minus_minus_0 0
#define P99__minus_minus_1 1
#define P99__minus_minus_2 2
#define P99__minus_minus_3 3
#define P99__minus_minus_4 4
#define P99__minus_minus_5 5
#define P99__minus_minus_6 6
#define P99__minus_minus_7 7
#define P99__minus_minus_8 8
#define P99__minus_minus_9 9
#define P99__minus_minus_10 10
#define P99__minus_minus_11 11
#define P99__minus_minus_12 12
#define P99__minus_minus_13 13
#define P99__minus_minus_14 14
#define P99__minus_minus_15 15
#define P99__minus_minus_16 16
#define P99__minus_minus_17 17
#define P99__minus_minus_18 18
#define P99__minus_minus_19 19
#define P99__minus_minus_20 20
#define P99__minus_minus_21 21
#define P99__minus_minus_22 22
#define P99__minus_minus_23 23
#define P99__minus_minus_24 24
#define P99__minus_minus_25 25
#define P99__minus_minus_26 26
#define P99__minus_minus_27 27
#define P99__minus_minus_28 28
#define P99__minus_minus_29 29
#define P99__minus_minus_30 30
#define P99__minus_minus_31 31
#define P99__minus_minus_32 32
#define P99__minus_minus_33 33
#define P99__minus_minus_34 34
#define P99__minus_minus_35 35
#define P99__minus_minus_36 36
#define P99__minus_minus_37 37
#define P99__minus_minus_38 38
#define P99__minus_minus_39 39
#define P99__minus_minus_40 40
#define P99__minus_minus_41 41
#define P99__minus_minus_42 42
#define P99__minus_minus_43 43
#define P99__minus_minus_44 44
#define P99__minus_minus_45 45
#define P99__minus_minus_46 46
#define P99__minus_minus_47 47
#define P99__minus_minus_48 48
#define P99__minus_minus_49 49
#define P99__minus_minus_50 50
#define P99__minus_minus_51 51
#define P99__minus_minus_52 52
#define P99__minus_minus_53 53
#define P99__minus_minus_54 54
#define P99__minus_minus_55 55
#define P99__minus_minus_56 56
#define P99__minus_minus_57 57
#define P99__minus_minus_58 58
#define P99__minus_minus_59 59
#define P99__minus_minus_60 60
#define P99__minus_minus_61 61
#define P99__minus_minus_62 62
#define P99__minus_minus_63 63
#define P99__minus_minus_64 64
#define P99__IS_0_GE_0 ,
#define P99__IS_1_GE_0 ,
#define P99__IS_2_GE_0 ,
#define P99__IS_3_GE_0 ,
#define P99__IS_4_GE_0 ,
#define P99__IS_5_GE_0 ,
#define P99__IS_6_GE_0 ,
#define P99__IS_7_GE_0 ,
#define P99__IS_8_GE_0 ,
#define P99__IS_9_GE_0 ,
#define P99__IS_10_GE_0 ,
#define P99__IS_11_GE_0 ,
#define P99__IS_12_GE_0 ,
#define P99__IS_13_GE_0 ,
#define P99__IS_14_GE_0 ,
#define P99__IS_15_GE_0 ,
#define P99__IS_16_GE_0 ,
#define P99__IS_17_GE_0 ,
#define P99__IS_18_GE_0 ,
#define P99__IS_19_GE_0 ,
#define P99__IS_20_GE_0 ,
#define P99__IS_21_GE_0 ,
#define P99__IS_22_GE_0 ,
#define P99__IS_23_GE_0 ,
#define P99__IS_24_GE_0 ,
#define P99__IS_25_GE_0 ,
#define P99__IS_26_GE_0 ,
#define P99__IS_27_GE_0 ,
#define P99__IS_28_GE_0 ,
#define P99__IS_29_GE_0 ,
#define P99__IS_30_GE_0 ,
#define P99__IS_31_GE_0 ,
#define P99__IS_32_GE_0 ,
#define P99__IS_33_GE_0 ,
#define P99__IS_34_GE_0 ,
#define P99__IS_35_GE_0 ,
#define P99__IS_36_GE_0 ,
#define P99__IS_37_GE_0 ,
#define P99__IS_38_GE_0 ,
#define P99__IS_39_GE_0 ,
#define P99__IS_40_GE_0 ,
#define P99__IS_41_GE_0 ,
#define P99__IS_42_GE_0 ,
#define P99__IS_43_GE_0 ,
#define P99__IS_44_GE_0 ,
#define P99__IS_45_GE_0 ,
#define P99__IS_46_GE_0 ,
#define P99__IS_47_GE_0 ,
#define P99__IS_48_GE_0 ,
#define P99__IS_49_GE_0 ,
#define P99__IS_50_GE_0 ,
#define P99__IS_51_GE_0 ,
#define P99__IS_52_GE_0 ,
#define P99__IS_53_GE_0 ,
#define P99__IS_54_GE_0 ,
#define P99__IS_55_GE_0 ,
#define P99__IS_56_GE_0 ,
#define P99__IS_57_GE_0 ,
#define P99__IS_58_GE_0 ,
#define P99__IS_59_GE_0 ,
#define P99__IS_60_GE_0 ,
#define P99__IS_61_GE_0 ,
#define P99__IS_62_GE_0 ,
#define P99__IS_63_GE_0 ,
#define P99__IS_64_GE_0 ,
#define P99__dec_eval_0 0
#define P99__dec_eval_1 1
#define P99__dec_eval_2 2
#define P99__dec_eval_3 3
#define P99__dec_eval_4 4
#define P99__dec_eval_5 5
#define P99__dec_eval_6 6
#define P99__dec_eval_7 7
#define P99__dec_eval_8 8
#define P99__dec_eval_9 9
#define P99__dec_eval_10 10
#define P99__dec_eval_11 11
#define P99__dec_eval_12 12
#define P99__dec_eval_13 13
#define P99__dec_eval_14 14
#define P99__dec_eval_15 15
#define P99__dec_eval_16 16
#define P99__dec_eval_17 17
#define P99__dec_eval_18 18
#define P99__dec_eval_19 19
#define P99__dec_eval_20 20
#define P99__dec_eval_21 21
#define P99__dec_eval_22 22
#define P99__dec_eval_23 23
#define P99__dec_eval_24 24
#define P99__dec_eval_25 25
#define P99__dec_eval_26 26
#define P99__dec_eval_27 27
#define P99__dec_eval_28 28
#define P99__dec_eval_29 29
#define P99__dec_eval_30 30
#define P99__dec_eval_31 31
#define P99__dec_eval_32 32
#define P99__dec_eval_33 33
#define P99__dec_eval_34 34
#define P99__dec_eval_35 35
#define P99__dec_eval_36 36
#define P99__dec_eval_37 37
#define P99__dec_eval_38 38
#define P99__dec_eval_39 39
#define P99__dec_eval_40 40
#define P99__dec_eval_41 41
#define P99__dec_eval_42 42
#define P99__dec_eval_43 43
#define P99__dec_eval_44 44
#define P99__dec_eval_45 45
#define P99__dec_eval_46 46
#define P99__dec_eval_47 47
#define P99__dec_eval_48 48
#define P99__dec_eval_49 49
#define P99__dec_eval_50 50
#define P99__dec_eval_51 51
#define P99__dec_eval_52 52
#define P99__dec_eval_53 53
#define P99__dec_eval_54 54
#define P99__dec_eval_55 55
#define P99__dec_eval_56 56
#define P99__dec_eval_57 57
#define P99__dec_eval_58 58
#define P99__dec_eval_59 59
#define P99__dec_eval_60 60
#define P99__dec_eval_61 61
#define P99__dec_eval_62 62
#define P99__dec_eval_63 63
#define P99__dec_eval_64 64
#define P99__dec_eval_minus_0 0
#define P99__dec_eval_minus_1 -1
#define P99__dec_eval_minus_2 -2
#define P99__dec_eval_minus_3 -3
#define P99__dec_eval_minus_4 -4
#define P99__dec_eval_minus_5 -5
#define P99__dec_eval_minus_6 -6
#define P99__dec_eval_minus_7 -7
#define P99__dec_eval_minus_8 -8
#define P99__dec_eval_minus_9 -9
#define P99__dec_eval_minus_10 -10
#define P99__dec_eval_minus_11 -11
#define P99__dec_eval_minus_12 -12
#define P99__dec_eval_minus_13 -13
#define P99__dec_eval_minus_14 -14
#define P99__dec_eval_minus_15 -15
#define P99__dec_eval_minus_16 -16
#define P99__dec_eval_minus_17 -17
#define P99__dec_eval_minus_18 -18
#define P99__dec_eval_minus_19 -19
#define P99__dec_eval_minus_20 -20
#define P99__dec_eval_minus_21 -21
#define P99__dec_eval_minus_22 -22
#define P99__dec_eval_minus_23 -23
#define P99__dec_eval_minus_24 -24
#define P99__dec_eval_minus_25 -25
#define P99__dec_eval_minus_26 -26
#define P99__dec_eval_minus_27 -27
#define P99__dec_eval_minus_28 -28
#define P99__dec_eval_minus_29 -29
#define P99__dec_eval_minus_30 -30
#define P99__dec_eval_minus_31 -31
#define P99__dec_eval_minus_32 -32
#define P99__dec_eval_minus_33 -33
#define P99__dec_eval_minus_34 -34
#define P99__dec_eval_minus_35 -35
#define P99__dec_eval_minus_36 -36
#define P99__dec_eval_minus_37 -37
#define P99__dec_eval_minus_38 -38
#define P99__dec_eval_minus_39 -39
#define P99__dec_eval_minus_40 -40
#define P99__dec_eval_minus_41 -41
#define P99__dec_eval_minus_42 -42
#define P99__dec_eval_minus_43 -43
#define P99__dec_eval_minus_44 -44
#define P99__dec_eval_minus_45 -45
#define P99__dec_eval_minus_46 -46
#define P99__dec_eval_minus_47 -47
#define P99__dec_eval_minus_48 -48
#define P99__dec_eval_minus_49 -49
#define P99__dec_eval_minus_50 -50
#define P99__dec_eval_minus_51 -51
#define P99__dec_eval_minus_52 -52
#define P99__dec_eval_minus_53 -53
#define P99__dec_eval_minus_54 -54
#define P99__dec_eval_minus_55 -55
#define P99__dec_eval_minus_56 -56
#define P99__dec_eval_minus_57 -57
#define P99__dec_eval_minus_58 -58
#define P99__dec_eval_minus_59 -59
#define P99__dec_eval_minus_60 -60
#define P99__dec_eval_minus_61 -61
#define P99__dec_eval_minus_62 -62
#define P99__dec_eval_minus_63 -63
#define P99__dec_eval_minus_64 -64
#define DUPL2(...) __VA_ARGS__, DUPL1(__VA_ARGS__)
#define DUPL3(...) __VA_ARGS__, DUPL2(__VA_ARGS__)
#define DUPL4(...) __VA_ARGS__, DUPL3(__VA_ARGS__)
#define DUPL5(...) __VA_ARGS__, DUPL4(__VA_ARGS__)
#define DUPL6(...) __VA_ARGS__, DUPL5(__VA_ARGS__)
#define DUPL7(...) __VA_ARGS__, DUPL6(__VA_ARGS__)
#define DUPL8(...) __VA_ARGS__, DUPL7(__VA_ARGS__)
#define DUPL9(...) __VA_ARGS__, DUPL8(__VA_ARGS__)
#define DUPL10(...) __VA_ARGS__, DUPL9(__VA_ARGS__)
#define DUPL11(...) __VA_ARGS__, DUPL10(__VA_ARGS__)
#define DUPL12(...) __VA_ARGS__, DUPL11(__VA_ARGS__)
#define DUPL13(...) __VA_ARGS__, DUPL12(__VA_ARGS__)
#define DUPL14(...) __VA_ARGS__, DUPL13(__VA_ARGS__)
#define DUPL15(...) __VA_ARGS__, DUPL14(__VA_ARGS__)
#define DUPL16(...) __VA_ARGS__, DUPL15(__VA_ARGS__)
#define DUPL17(...) __VA_ARGS__, DUPL16(__VA_ARGS__)
#define DUPL18(...) __VA_ARGS__, DUPL17(__VA_ARGS__)
#define DUPL19(...) __VA_ARGS__, DUPL18(__VA_ARGS__)
#define DUPL20(...) __VA_ARGS__, DUPL19(__VA_ARGS__)
#define DUPL21(...) __VA_ARGS__, DUPL20(__VA_ARGS__)
#define DUPL22(...) __VA_ARGS__, DUPL21(__VA_ARGS__)
#define DUPL23(...) __VA_ARGS__, DUPL22(__VA_ARGS__)
#define DUPL24(...) __VA_ARGS__, DUPL23(__VA_ARGS__)
#define DUPL25(...) __VA_ARGS__, DUPL24(__VA_ARGS__)
#define DUPL26(...) __VA_ARGS__, DUPL25(__VA_ARGS__)
#define DUPL27(...) __VA_ARGS__, DUPL26(__VA_ARGS__)
#define DUPL28(...) __VA_ARGS__, DUPL27(__VA_ARGS__)
#define DUPL29(...) __VA_ARGS__, DUPL28(__VA_ARGS__)
#define DUPL30(...) __VA_ARGS__, DUPL29(__VA_ARGS__)
#define DUPL31(...) __VA_ARGS__, DUPL30(__VA_ARGS__)
#define DUPL32(...) __VA_ARGS__, DUPL31(__VA_ARGS__)
#define DUPL33(...) __VA_ARGS__, DUPL32(__VA_ARGS__)
#define DUPL34(...) __VA_ARGS__, DUPL33(__VA_ARGS__)
#define DUPL35(...) __VA_ARGS__, DUPL34(__VA_ARGS__)
#define DUPL36(...) __VA_ARGS__, DUPL35(__VA_ARGS__)
#define DUPL37(...) __VA_ARGS__, DUPL36(__VA_ARGS__)
#define DUPL38(...) __VA_ARGS__, DUPL37(__VA_ARGS__)
#define DUPL39(...) __VA_ARGS__, DUPL38(__VA_ARGS__)
#define DUPL40(...) __VA_ARGS__, DUPL39(__VA_ARGS__)
#define DUPL41(...) __VA_ARGS__, DUPL40(__VA_ARGS__)
#define DUPL42(...) __VA_ARGS__, DUPL41(__VA_ARGS__)
#define DUPL43(...) __VA_ARGS__, DUPL42(__VA_ARGS__)
#define DUPL44(...) __VA_ARGS__, DUPL43(__VA_ARGS__)
#define DUPL45(...) __VA_ARGS__, DUPL44(__VA_ARGS__)
#define DUPL46(...) __VA_ARGS__, DUPL45(__VA_ARGS__)
#define DUPL47(...) __VA_ARGS__, DUPL46(__VA_ARGS__)
#define DUPL48(...) __VA_ARGS__, DUPL47(__VA_ARGS__)
#define DUPL49(...) __VA_ARGS__, DUPL48(__VA_ARGS__)
#define DUPL50(...) __VA_ARGS__, DUPL49(__VA_ARGS__)
#define DUPL51(...) __VA_ARGS__, DUPL50(__VA_ARGS__)
#define DUPL52(...) __VA_ARGS__, DUPL51(__VA_ARGS__)
#define DUPL53(...) __VA_ARGS__, DUPL52(__VA_ARGS__)
#define DUPL54(...) __VA_ARGS__, DUPL53(__VA_ARGS__)
#define DUPL55(...) __VA_ARGS__, DUPL54(__VA_ARGS__)
#define DUPL56(...) __VA_ARGS__, DUPL55(__VA_ARGS__)
#define DUPL57(...) __VA_ARGS__, DUPL56(__VA_ARGS__)
#define DUPL58(...) __VA_ARGS__, DUPL57(__VA_ARGS__)
#define DUPL59(...) __VA_ARGS__, DUPL58(__VA_ARGS__)
#define DUPL60(...) __VA_ARGS__, DUPL59(__VA_ARGS__)
#define DUPL61(...) __VA_ARGS__, DUPL60(__VA_ARGS__)
#define DUPL62(...) __VA_ARGS__, DUPL61(__VA_ARGS__)
#define DUPL63(...) __VA_ARGS__, DUPL62(__VA_ARGS__)
#define DUPL64(...) __VA_ARGS__, DUPL63(__VA_ARGS__)
#define P99__FOR2(NAME, OP, FUNC, ...) \
	OP(NAME, 1, P99__FOR1(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 1))
#define P99__FOR3(NAME, OP, FUNC, ...) \
	OP(NAME, 2, P99__FOR2(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 2))
#define P99__FOR4(NAME, OP, FUNC, ...) \
	OP(NAME, 3, P99__FOR3(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 3))
#define P99__FOR5(NAME, OP, FUNC, ...) \
	OP(NAME, 4, P99__FOR4(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 4))
#define P99__FOR6(NAME, OP, FUNC, ...) \
	OP(NAME, 5, P99__FOR5(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 5))
#define P99__FOR7(NAME, OP, FUNC, ...) \
	OP(NAME, 6, P99__FOR6(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 6))
#define P99__FOR8(NAME, OP, FUNC, ...) \
	OP(NAME, 7, P99__FOR7(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 7))
#define P99__FOR9(NAME, OP, FUNC, ...) \
	OP(NAME, 8, P99__FOR8(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 8))
#define P99__FOR10(NAME, OP, FUNC, ...) \
	OP(NAME, 9, P99__FOR9(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 9))
#define P99__FOR11(NAME, OP, FUNC, ...) \
	OP(NAME, 10, P99__FOR10(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 10))
#define P99__FOR12(NAME, OP, FUNC, ...) \
	OP(NAME, 11, P99__FOR11(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 11))
#define P99__FOR13(NAME, OP, FUNC, ...) \
	OP(NAME, 12, P99__FOR12(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 12))
#define P99__FOR14(NAME, OP, FUNC, ...) \
	OP(NAME, 13, P99__FOR13(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 13))
#define P99__FOR15(NAME, OP, FUNC, ...) \
	OP(NAME, 14, P99__FOR14(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 14))
#define P99__FOR16(NAME, OP, FUNC, ...) \
	OP(NAME, 15, P99__FOR15(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 15))
#define P99__FOR17(NAME, OP, FUNC, ...) \
	OP(NAME, 16, P99__FOR16(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 16))
#define P99__FOR18(NAME, OP, FUNC, ...) \
	OP(NAME, 17, P99__FOR17(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 17))
#define P99__FOR19(NAME, OP, FUNC, ...) \
	OP(NAME, 18, P99__FOR18(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 18))
#define P99__FOR20(NAME, OP, FUNC, ...) \
	OP(NAME, 19, P99__FOR19(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 19))
#define P99__FOR21(NAME, OP, FUNC, ...) \
	OP(NAME, 20, P99__FOR20(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 20))
#define P99__FOR22(NAME, OP, FUNC, ...) \
	OP(NAME, 21, P99__FOR21(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 21))
#define P99__FOR23(NAME, OP, FUNC, ...) \
	OP(NAME, 22, P99__FOR22(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 22))
#define P99__FOR24(NAME, OP, FUNC, ...) \
	OP(NAME, 23, P99__FOR23(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 23))
#define P99__FOR25(NAME, OP, FUNC, ...) \
	OP(NAME, 24, P99__FOR24(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 24))
#define P99__FOR26(NAME, OP, FUNC, ...) \
	OP(NAME, 25, P99__FOR25(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 25))
#define P99__FOR27(NAME, OP, FUNC, ...) \
	OP(NAME, 26, P99__FOR26(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 26))
#define P99__FOR28(NAME, OP, FUNC, ...) \
	OP(NAME, 27, P99__FOR27(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 27))
#define P99__FOR29(NAME, OP, FUNC, ...) \
	OP(NAME, 28, P99__FOR28(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 28))
#define P99__FOR30(NAME, OP, FUNC, ...) \
	OP(NAME, 29, P99__FOR29(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 29))
#define P99__FOR31(NAME, OP, FUNC, ...) \
	OP(NAME, 30, P99__FOR30(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 30))
#define P99__FOR32(NAME, OP, FUNC, ...) \
	OP(NAME, 31, P99__FOR31(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 31))
#define P99__FOR33(NAME, OP, FUNC, ...) \
	OP(NAME, 32, P99__FOR32(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 32))
#define P99__FOR34(NAME, OP, FUNC, ...) \
	OP(NAME, 33, P99__FOR33(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 33))
#define P99__FOR35(NAME, OP, FUNC, ...) \
	OP(NAME, 34, P99__FOR34(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 34))
#define P99__FOR36(NAME, OP, FUNC, ...) \
	OP(NAME, 35, P99__FOR35(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 35))
#define P99__FOR37(NAME, OP, FUNC, ...) \
	OP(NAME, 36, P99__FOR36(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 36))
#define P99__FOR38(NAME, OP, FUNC, ...) \
	OP(NAME, 37, P99__FOR37(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 37))
#define P99__FOR39(NAME, OP, FUNC, ...) \
	OP(NAME, 38, P99__FOR38(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 38))
#define P99__FOR40(NAME, OP, FUNC, ...) \
	OP(NAME, 39, P99__FOR39(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 39))
#define P99__FOR41(NAME, OP, FUNC, ...) \
	OP(NAME, 40, P99__FOR40(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 40))
#define P99__FOR42(NAME, OP, FUNC, ...) \
	OP(NAME, 41, P99__FOR41(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 41))
#define P99__FOR43(NAME, OP, FUNC, ...) \
	OP(NAME, 42, P99__FOR42(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 42))
#define P99__FOR44(NAME, OP, FUNC, ...) \
	OP(NAME, 43, P99__FOR43(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 43))
#define P99__FOR45(NAME, OP, FUNC, ...) \
	OP(NAME, 44, P99__FOR44(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 44))
#define P99__FOR46(NAME, OP, FUNC, ...) \
	OP(NAME, 45, P99__FOR45(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 45))
#define P99__FOR47(NAME, OP, FUNC, ...) \
	OP(NAME, 46, P99__FOR46(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 46))
#define P99__FOR48(NAME, OP, FUNC, ...) \
	OP(NAME, 47, P99__FOR47(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 47))
#define P99__FOR49(NAME, OP, FUNC, ...) \
	OP(NAME, 48, P99__FOR48(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 48))
#define P99__FOR50(NAME, OP, FUNC, ...) \
	OP(NAME, 49, P99__FOR49(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 49))
#define P99__FOR51(NAME, OP, FUNC, ...) \
	OP(NAME, 50, P99__FOR50(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 50))
#define P99__FOR52(NAME, OP, FUNC, ...) \
	OP(NAME, 51, P99__FOR51(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 51))
#define P99__FOR53(NAME, OP, FUNC, ...) \
	OP(NAME, 52, P99__FOR52(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 52))
#define P99__FOR54(NAME, OP, FUNC, ...) \
	OP(NAME, 53, P99__FOR53(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 53))
#define P99__FOR55(NAME, OP, FUNC, ...) \
	OP(NAME, 54, P99__FOR54(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 54))
#define P99__FOR56(NAME, OP, FUNC, ...) \
	OP(NAME, 55, P99__FOR55(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 55))
#define P99__FOR57(NAME, OP, FUNC, ...) \
	OP(NAME, 56, P99__FOR56(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 56))
#define P99__FOR58(NAME, OP, FUNC, ...) \
	OP(NAME, 57, P99__FOR57(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 57))
#define P99__FOR59(NAME, OP, FUNC, ...) \
	OP(NAME, 58, P99__FOR58(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 58))
#define P99__FOR60(NAME, OP, FUNC, ...) \
	OP(NAME, 59, P99__FOR59(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 59))
#define P99__FOR61(NAME, OP, FUNC, ...) \
	OP(NAME, 60, P99__FOR60(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 60))
#define P99__FOR62(NAME, OP, FUNC, ...) \
	OP(NAME, 61, P99__FOR61(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 61))
#define P99__FOR63(NAME, OP, FUNC, ...) \
	OP(NAME, 62, P99__FOR62(NAME, OP, FUNC, ALLBUTLAST(__VA_ARGS__)), FUNC(NAME, LAST(__VA_ARGS__), 62))
